/* SPDX-License-Identifier: GPL-2.0 */
#include <linux/bitops.h>
#include <linux/device.h>
#include <linux/regmap.h>

/* BMP380 specific registers */
#define BMP380_REG_CMD			0x7E
#define BMP380_REG_CONFIG		0x1F
#define BMP380_REG_ODR			0X1D
#define BMP380_REG_OSR			0X1C
#define BMP380_REG_POWER_CONTROL	0X1B
#define BMP380_REG_IF_CONFIG		0X1A
#define BMP380_REG_INT_CONTROL		0X19
#define BMP380_REG_INT_STATUS		0X11
#define BMP380_REG_EVENT		0X10
#define BMP380_REG_STATUS		0X03
#define BMP380_REG_ERROR		0X02
#define BMP380_REG_ID			0X00

#define BMP380_REG_FIFO_CONFIG_1	0X18
#define BMP380_REG_FIFO_CONFIG_2	0X17
#define BMP380_REG_FIFO_WATERMARK_MSB	0X16
#define BMP380_REG_FIFO_WATERMARK_LSB	0X15
#define BMP380_REG_FIFO_DATA		0X14
#define BMP380_REG_FIFO_LENGTH_MSB	0X13
#define BMP380_REG_FIFO_LENGTH_LSB	0X12

#define BMP380_REG_SENSOR_TIME_MSB	0X0E
#define BMP380_REG_SENSOR_TIME_LSB	0X0D
#define BMP380_REG_SENSOR_TIME_XLSB	0X0C

#define BMP380_REG_TEMP_MSB		0X09
#define BMP380_REG_TEMP_LSB		0X08
#define BMP380_REG_TEMP_XLSB		0X07

#define BMP380_REG_PRESS_MSB		0X06
#define BMP380_REG_PRESS_LSB		0X05
#define BMP380_REG_PRESS_XLSB		0X04

#define BMP380_REG_CALIB_TEMP_START	0x31
#define BMP380_CALIB_REG_COUNT		21
#define le16_from_bytes(lsb, msb)	(le16_to_cpu(((((__le16) msb) << 8) | \
							(__le16) lsb)))

#define BMP380_FILTER_MASK		GENMASK(3, 1)
#define BMP380_FILTER_OFF		0
#define BMP380_FILTER_1X		BIT(1)
#define BMP380_FILTER_3X		BIT(2)
#define BMP380_FILTER_7X		(BIT(2) | BIT(1))
#define BMP380_FILTER_15X		BIT(3)
#define BMP380_FILTER_31X		(BIT(3) | BIT(1))
#define BMP380_FILTER_63X		(BIT(3) | BIT(2))
#define BMP380_FILTER_127X		(BIT(3) | BIT(2) | BIT(1))

#define BMP380_OSRS_TEMP_MASK		GENMASK(5, 3)
#define BMP380_OSRS_TEMP_X(osrs_t)	((osrs_t) << 3)
#define BMP380_OSRS_TEMP_1X		BMP380_OSRS_TEMP_X(0)
#define BMP380_OSRS_TEMP_2X		BMP380_OSRS_TEMP_X(1)
#define BMP380_OSRS_TEMP_4X		BMP380_OSRS_TEMP_X(2)
#define BMP380_OSRS_TEMP_8X		BMP380_OSRS_TEMP_X(3)
#define BMP380_OSRS_TEMP_16X		BMP380_OSRS_TEMP_X(4)
#define BMP380_OSRS_TEMP_32X		BMP380_OSRS_TEMP_X(5)

#define BMP380_OSRS_PRESS_MASK		(BIT(2) | BIT(1) | BIT(0))
#define BMP380_OSRS_PRESS_X(osrs_p)	((osrs_p) << 0)
#define BMP380_OSRS_PRESS_1X		BMP380_OSRS_PRESS_X(0)
#define BMP380_OSRS_PRESS_2X		BMP380_OSRS_PRESS_X(1)
#define BMP380_OSRS_PRESS_4X		BMP380_OSRS_PRESS_X(2)
#define BMP380_OSRS_PRESS_8X		BMP380_OSRS_PRESS_X(3)
#define BMP380_OSRS_PRESS_16X		BMP380_OSRS_PRESS_X(4)
#define BMP380_OSRS_PRESS_32X		BMP380_OSRS_PRESS_X(5)

#define BMP380_ODRS_MASK		GENMASK(4, 0)
#define BMP380_ODRS_200HZ		0x00
#define BMP380_ODRS_100HZ		0x01
#define BMP380_ODRS_50HZ		0x02
#define BMP380_ODRS_25HZ		0x03
#define BMP380_ODRS_12_5HZ		0x04
#define BMP380_ODRS_6_25HZ		0x05
#define BMP380_ODRS_3_1HZ		0x06
#define BMP380_ODRS_1_5HZ		0x07
#define BMP380_ODRS_0_78HZ		0x08
#define BMP380_ODRS_0_39HZ		0x09
#define BMP380_ODRS_0_2HZ		0x0A
#define BMP380_ODRS_0_1HZ		0x0B
#define BMP380_ODRS_0_05HZ		0x0C
#define BMP380_ODRS_0_02HZ		0x0D
#define BMP380_ODRS_0_01HZ		0x0E
#define BMP380_ODRS_0_006HZ		0x0F
#define BMP380_ODRS_0_003HZ		0x10
#define BMP380_ODRS_0_0015HZ		0x11

#define BMP380_CTRL_SENSORS_MASK	GENMASK(1, 0)
#define BMP380_CTRL_SENSORS_PRESS_EN	BIT(0)
#define BMP380_CTRL_SENSORS_TEMP_EN	BIT(1)
#define BMP380_MODE_MASK		GENMASK(5, 4)
#define BMP380_MODE_SLEEP		0
#define BMP380_MODE_FORCED		BIT(4)
#define BMP380_MODE_NORMAL		(BIT(5) | BIT(4))

#define BMP380_MIN_TEMP			-4000
#define BMP380_MAX_TEMP			8500
#define BMP380_MIN_PRES			3000000
#define BMP380_MAX_PRES			12500000

#define BMP380_CMD_NOOP			0X00
#define BMP380_CMD_EXTMODE_EN_MID	0x34
#define BMP380_CMD_FIFO_FLUSH		0XB0
#define BMP380_CMD_SOFT_RESET		0xB6

#define BMP380_STATUS_CMD_RDY_MASK	BIT(4)
#define BMP380_STATUS_DRDY_PRESS_MASK	BIT(5)
#define BMP380_STATUS_DRDY_TEMP_MASK	BIT(6)

#define BMP380_ERR_FATAL_MASK		BIT(0)
#define	BMP380_ERR_CMD_MASK		BIT(1)
#define BMP380_ERR_CONF_MASK		BIT(2)

#define BMP380_TEMP_SKIPPED		0x800000
#define BMP380_PRESS_SKIPPED		0x800000

/* BMP280 specific registers */
#define BMP280_REG_HUMIDITY_LSB		0xFE
#define BMP280_REG_HUMIDITY_MSB		0xFD
#define BMP280_REG_TEMP_XLSB		0xFC
#define BMP280_REG_TEMP_LSB		0xFB
#define BMP280_REG_TEMP_MSB		0xFA
#define BMP280_REG_PRESS_XLSB		0xF9
#define BMP280_REG_PRESS_LSB		0xF8
#define BMP280_REG_PRESS_MSB		0xF7

#define BMP280_REG_CONFIG		0xF5
#define BMP280_REG_CTRL_MEAS		0xF4
#define BMP280_REG_STATUS		0xF3
#define BMP280_REG_CTRL_HUMIDITY	0xF2

/* Due to non linear mapping, and data sizes we can't do a bulk read */
#define BMP280_REG_COMP_H1		0xA1
#define BMP280_REG_COMP_H2		0xE1
#define BMP280_REG_COMP_H3		0xE3
#define BMP280_REG_COMP_H4		0xE4
#define BMP280_REG_COMP_H5		0xE5
#define BMP280_REG_COMP_H6		0xE7

#define BMP280_REG_COMP_TEMP_START	0x88
#define BMP280_COMP_TEMP_REG_COUNT	6

#define BMP280_REG_COMP_PRESS_START	0x8E
#define BMP280_COMP_PRESS_REG_COUNT	18

#define BMP280_FILTER_MASK		(BIT(4) | BIT(3) | BIT(2))
#define BMP280_FILTER_OFF		0
#define BMP280_FILTER_2X		BIT(2)
#define BMP280_FILTER_4X		BIT(3)
#define BMP280_FILTER_8X		(BIT(3) | BIT(2))
#define BMP280_FILTER_16X		BIT(4)

#define BMP280_OSRS_HUMIDITY_MASK	(BIT(2) | BIT(1) | BIT(0))
#define BMP280_OSRS_HUMIDITIY_X(osrs_h)	((osrs_h) << 0)
#define BMP280_OSRS_HUMIDITY_SKIP	0
#define BMP280_OSRS_HUMIDITY_1X		BMP280_OSRS_HUMIDITIY_X(1)
#define BMP280_OSRS_HUMIDITY_2X		BMP280_OSRS_HUMIDITIY_X(2)
#define BMP280_OSRS_HUMIDITY_4X		BMP280_OSRS_HUMIDITIY_X(3)
#define BMP280_OSRS_HUMIDITY_8X		BMP280_OSRS_HUMIDITIY_X(4)
#define BMP280_OSRS_HUMIDITY_16X	BMP280_OSRS_HUMIDITIY_X(5)

#define BMP280_OSRS_TEMP_MASK		(BIT(7) | BIT(6) | BIT(5))
#define BMP280_OSRS_TEMP_SKIP		0
#define BMP280_OSRS_TEMP_X(osrs_t)	((osrs_t) << 5)
#define BMP280_OSRS_TEMP_1X		BMP280_OSRS_TEMP_X(1)
#define BMP280_OSRS_TEMP_2X		BMP280_OSRS_TEMP_X(2)
#define BMP280_OSRS_TEMP_4X		BMP280_OSRS_TEMP_X(3)
#define BMP280_OSRS_TEMP_8X		BMP280_OSRS_TEMP_X(4)
#define BMP280_OSRS_TEMP_16X		BMP280_OSRS_TEMP_X(5)

#define BMP280_OSRS_PRESS_MASK		(BIT(4) | BIT(3) | BIT(2))
#define BMP280_OSRS_PRESS_SKIP		0
#define BMP280_OSRS_PRESS_X(osrs_p)	((osrs_p) << 2)
#define BMP280_OSRS_PRESS_1X		BMP280_OSRS_PRESS_X(1)
#define BMP280_OSRS_PRESS_2X		BMP280_OSRS_PRESS_X(2)
#define BMP280_OSRS_PRESS_4X		BMP280_OSRS_PRESS_X(3)
#define BMP280_OSRS_PRESS_8X		BMP280_OSRS_PRESS_X(4)
#define BMP280_OSRS_PRESS_16X		BMP280_OSRS_PRESS_X(5)

#define BMP280_MODE_MASK		(BIT(1) | BIT(0))
#define BMP280_MODE_SLEEP		0
#define BMP280_MODE_FORCED		BIT(0)
#define BMP280_MODE_NORMAL		(BIT(1) | BIT(0))

/* BMP180 specific registers */
#define BMP180_REG_OUT_XLSB		0xF8
#define BMP180_REG_OUT_LSB		0xF7
#define BMP180_REG_OUT_MSB		0xF6

#define BMP180_REG_CALIB_START		0xAA
#define BMP180_REG_CALIB_COUNT		22

#define BMP180_MEAS_SCO			BIT(5)
#define BMP180_MEAS_TEMP		(0x0E | BMP180_MEAS_SCO)
#define BMP180_MEAS_PRESS_X(oss)	((oss) << 6 | 0x14 | BMP180_MEAS_SCO)
#define BMP180_MEAS_PRESS_1X		BMP180_MEAS_PRESS_X(0)
#define BMP180_MEAS_PRESS_2X		BMP180_MEAS_PRESS_X(1)
#define BMP180_MEAS_PRESS_4X		BMP180_MEAS_PRESS_X(2)
#define BMP180_MEAS_PRESS_8X		BMP180_MEAS_PRESS_X(3)

/* BMP180 and BMP280 common registers */
#define BMP280_REG_CTRL_MEAS		0xF4
#define BMP280_REG_RESET		0xE0
#define BMP280_REG_ID			0xD0

#define BMP380_CHIP_ID			0x50
#define BMP180_CHIP_ID			0x55
#define BMP280_CHIP_ID			0x58
#define BME280_CHIP_ID			0x60
#define BMP280_SOFT_RESET_VAL		0xB6

/* BMP280 register skipped special values */
#define BMP280_TEMP_SKIPPED		0x80000
#define BMP280_PRESS_SKIPPED		0x80000
#define BMP280_HUMIDITY_SKIPPED		0x8000

/* Regmap configurations */
extern const struct regmap_config bmp180_regmap_config;
extern const struct regmap_config bmp280_regmap_config;
extern const struct regmap_config bmp380_regmap_config;

/* Probe called from different transports */
int bmp280_common_probe(struct device *dev,
			struct regmap *regmap,
			unsigned int chip,
			const char *name,
			int irq);

/* PM ops */
extern const struct dev_pm_ops bmp280_dev_pm_ops;
